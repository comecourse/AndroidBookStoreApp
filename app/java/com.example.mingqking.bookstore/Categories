package com.example.mingqking.bookstore;


import android.app.Activity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.provider.MediaStore;
import android.support.annotation.Nullable;
import android.support.design.widget.FloatingActionButton;
import android.support.v4.app.Fragment;
import android.support.v4.app.ListFragment;
import android.support.v7.app.AlertDialog;
import android.text.InputType;
import android.util.Base64;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;

import java.io.ByteArrayOutputStream;
import java.util.ArrayList;
import java.util.List;


/**
 * A simple {@link Fragment} subclass.
 */
public class Categories extends ListFragment {

    private ListView lvProduct;
    private ProductListAdapter adapter;
    private List<product> mProductList;

    private FloatingActionButton fab;

    public static int RESULT_LOAD_IMAGE=1;
    public static int RESULT_LOAD_IMAGE2=2;

    public static Intent galerryIntent;

    private String name_text = "";
    private int price_text=0;
    private String descrip_text="";

    ImageView imageInput;
    Uri selectedImage;
    Drawable itemImage;





    public Categories() {
        // Required empty public constructor
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState)
    {

        View rootView= inflater.inflate(R.layout.fragment_categories, container, false);
        mProductList=new ArrayList<>();
       // mProductList.add(new product(1,R.drawable.book1,"iphone 6",800,"mobile 16G"));
        setListAdapter(new ProductListAdapter(getActivity(),mProductList));
        return rootView;
    }

    @Override
    public void onActivityCreated(Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);



       // lvProduct= (ListView) getView().findViewById(R.id.listview_product);
       // ArrayAdapter adapter = ArrayAdapter.createFromResource(getActivity(), R.array.Planets, android.R.layout.simple_list_item_1);
        //setListAdapter(adapter);
        fab= (FloatingActionButton) getView().findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                AlertDialog.Builder builder = new AlertDialog.Builder(getContext(),R.style.AlertDialogCustom);
                TextView myMsg = new TextView(getContext());
                myMsg.setText("Add New Book");
                myMsg.setGravity(Gravity.CENTER_HORIZONTAL);
                myMsg.setTextSize(20);
                myMsg.setTextColor(getResources().getColor(R.color.colorPrimary));
                //set custom title
                builder.setCustomTitle(myMsg);

               // builder.setTitle("Title");

                Context context =getContext();
                LinearLayout layout = new LinearLayout(context);
                layout.setOrientation(LinearLayout.VERTICAL);

                imageInput = new ImageView(getContext());
                imageInput.setImageResource(R.drawable.book1);

                int width = 150;
                int height = 150;
                LinearLayout.LayoutParams parms = new LinearLayout.LayoutParams(width,height);
                imageInput.setLayoutParams(parms);
                layout.addView(imageInput);



                //Detect imageInput has been clicked.
                imageInput.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        galerryIntent=new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
                        startActivityForResult(galerryIntent,RESULT_LOAD_IMAGE);

                    }
                });



                // Set up the input
                final EditText nameInput = new EditText(getContext());
                // Specify the type of input expected; this, for example, sets the input as a password, and will mask the text
                nameInput.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);
                nameInput.setHint("BookName");
                layout.addView(nameInput);

                final EditText priceInput = new EditText(getContext());
                priceInput.setInputType(InputType.TYPE_CLASS_NUMBER);
                priceInput.setHint("BookPrice");
                layout.addView(priceInput);

                final EditText descripInput = new EditText(getContext());
                descripInput.setInputType(InputType.TYPE_CLASS_TEXT);
                descripInput.setHint("BookDescription");
                layout.addView(descripInput);

                builder.setView(layout);

// Set up the buttons

                builder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {

                       name_text =nameInput.getText().toString();
                       price_text=Integer.valueOf(priceInput.getText().toString());
                       descrip_text=descripInput.getText().toString();

                        mProductList.add(new product(1,itemImage, name_text, price_text,descrip_text));
                        adapter=new ProductListAdapter(getActivity(),mProductList);
                       // startActivityForResult(galerryIntent,RESULT_LOAD_IMAGE2);

                        setListAdapter(adapter);
                        //View view=View.inflate(getContext(),R.layout.item_product_list,null);
                       // ImageView ivImage= (ImageView) view.findViewById(R.id.iv_image);
                       // ivImage.setImageDrawable(itemImage);
                    }
                });


              builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                         @Override
                         public void onClick(DialogInterface dialog, int which) {
                             dialog.cancel();
                         }
                      });


                builder.show();



            }
        });




    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data)
    {
        super.onActivityResult(requestCode, resultCode, data);

        if(resultCode == Activity.RESULT_OK && data!=null)
        {
            switch (requestCode)
            {
                case 1:
                {

                        selectedImage=data.getData();
                        imageInput.setImageURI(selectedImage);
                        //View view=View.inflate(getContext(),R.layout.item_product_list,null);
                       // ImageView ivImage= (ImageView) view.findViewById(R.id.iv_image);
                        itemImage=imageInput.getDrawable();

                         break;

                }
                case 2:
                {
                   // Uri selectedImage2=data.getData();
                   // adapter.ivImage.setImageURI(selectedImage);
                   // break;
                }

            }


        }
    }



}
